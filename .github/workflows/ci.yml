name: Quickipedia CI

on: 
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*'    

jobs:
  unit-tests-react:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run React Unit Tests Tests
      run: |
        pushd react
        npm install && npm run test
  unit-tests-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.15.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run Go Unit Tests
        run: |
          pushd go
          go get -u github.com/gorilla/mux
          go test -v
  build-nginx:
    needs: [unit-tests-react, unit-tests-go]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build The Nginx Server With React Output
        env:
          NGINX_PKG_NAME: "docker.pkg.github.com/petersdavis/planitarinterview/nginxserver"
        run: |
          docker build -t nginxserver:latest . 
          PACKAGE_NAME=${NGINX_PKG_NAME}:$(date +%s)
          docker tag nginxserver:latest ${PACKAGE_NAME}
          docker push ${PACKAGE_NAME}     
  build-go:
    needs: [unit-tests-react, unit-tests-go]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build The GO Server
        env:
          GO_PKG_NAME: "docker.pkg.github.com/petersdavis/planitarinterview/goserver"
        run: |
          pushd go
          docker build -t goserver:latest . 
          PACKAGE_NAME=${GO_PKG_NAME}:$(date +%s)
          docker tag nginxserver:latest ${PACKAGE_NAME}
          docker push ${PACKAGE_NAME}   